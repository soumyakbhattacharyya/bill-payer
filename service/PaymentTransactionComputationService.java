package com.serviceco.coex.payment.service;

import com.serviceco.coex.model.Scheme;
import com.serviceco.coex.payment.api.request.PaymentCalculationRequest;
import com.serviceco.coex.payment.model.calculation.PaymentTransactionRec;
import com.serviceco.coex.payment.model.calculation.PaymentTransactionRec.PaymentBatchExecutionSummary;
import com.serviceco.coex.persistence.PersistenceService;

public interface PaymentTransactionComputationService extends PersistenceService {

  /**
   * Payment transactions are generated by multiplying volumes with unit price; at conceptual level.
   * 
   * @param request
   *          is a {@link PaymentCalculationRequest} which represents a scheme participant type (mandatory) and two other optional parameters for payment computation.
   * @param scheme
   *          The scheme (eg. QLD/WA) for which the payment calculation operation will run under. Only transactions associated with the scheme will be processed.
   * @return a summary report highlighting how many {@link PaymentTransactionRec} were generated and associated high level detail
   */
  PaymentBatchExecutionSummary compute(PaymentCalculationRequest request, Scheme scheme);

}
